syntax = "proto2";

package space.polylog.burp;

option java_package = "space.polylog.burp.protobuf";
option java_outer_classname = "BurpMessages";



message BurpRequest {
    message URL {
        optional string protocol = 1;
        optional string host = 2;
        optional int32 port = 3;
        optional string file = 4;
    }

    enum State {
        UNMODIFIED = 0;
        MODIFIED = 1;
        DELETED = 2;
        ADDED = 3;
    }

    enum ContentType {
        CONTENT_TYPE_NONE = 0;
        CONTENT_TYPE_URL_ENCODED = 1;
        CONTENT_TYPE_MULTIPART = 2;
        CONTENT_TYPE_JSON = 4;
        CONTENT_TYPE_AMF = 5;
        CONTENT_TYPE_UNKNOWN = -1;
    }

    message Parameter{

        required string name = 1;
        required string value = 2;
        required int32 type = 3;
        required State state = 4;
    }

    repeated string headers = 1;
    required URL url = 2;
    required string requestMethod = 3;
    repeated Parameter parameters = 4;
    required State state = 5;
    required ContentType contentType= 6;
    optional string base64Body = 57;

}


message BurpResponse {
    message Cookie {
        required int64 expirationDate = 1;
        required string domain = 2;
        required string name = 3;
        required string value = 4;
    }

    repeated string headers = 1;
    repeated Cookie cookies = 2;
    required string inferredMimeType = 3;
    required string statedMimeType = 4;
    required int32 statusCode = 5;
    optional string base64Body = 6;


}
